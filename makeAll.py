import os
import sys
import time
from markdown_it import MarkdownIt
import json
from datetime import datetime

from dominate import document
from dominate.tags import *

IGNORE = "X_" # dessa kataloger och filer ignoreras i AUTO

mdit = MarkdownIt('commonmark', {'breaks':False,'html':True}).enable('table')

news = []

with open("settings.json","r") as f:
	settings = json.loads(f.read())
	ROOT = settings['patches']['ROOT']

def pretty(s): return s.replace('.md','').replace('_',' ')

def patch(s):
	patches = settings['patches']
	for key in patches:
		s = s.replace(key,patches[key])
	return s

def wrapHtml(original, filename, t, level, content=""):
	t = pretty(t)
	index = 1 + filename.rindex("/")
	short_md = filename[index:].replace('.html','.md')
	long_md = filename.replace('.html','.md')

	doc = document(title=t)
	with doc.head:
		meta(name="viewport", content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
		meta(charset = "utf-8")
		title(t)
		script("function changeMonth(month) { history.replaceState(null, '', month); window.location.reload() }")
		start = 0 if level <= 1 else 1
		for i in reversed(range(start,level)):
			link(href=f"{i * '../'}style.css", rel="stylesheet", type="text/css")

	with doc.body:
		if level == 1:
			with table():
				with tr(cls="vinjett", height="100px"):
					with td():
						with a(href="../Seniorschack_Stockholm/Xperiment/Föredrag/Lewis_Chess_Men/"):
							img(height="200px", src=f"{(level-1) * '../'}X_bilder/knight2.png")
					td("Seniorschack Stockholm")
		else:
			if os.path.exists(long_md):
				h1(a(t, href=short_md))
			else:
				h1(t)
		div('INSERT') # placeholder for content from markdown

	with open(filename, 'w', encoding='utf8') as g:
		s = doc.render()
		s = comment(f" Generated by makeAll.py 1.0 from {original} ").render() + "\n" + s
		s = s.replace('<div>INSERT</div>',content)
		g.write(s)

def noExt(s):
	s = s.replace("_", " ")
	if settings['showExt']: return s
	else:
		p = s.rindex('.')
		if p: return s[:p]
		return s

def getLink(f):
	with open(f,encoding='utf8') as f1:
		link = f1.read().strip()
		return patch(link)

def makeMenu(href,title): return [title, href]

def yymm():         return str(datetime.now())[:7]	
def yymmddhhmmss(): return str(datetime.now())[:16]

def convert(href):
	# title = title.replace('_',' ')
	if href == 'Nyheter': href = f"Nyheter/{yymm()}"
	return href

def transpileDir(directory, level=0):
	global news
	if type(directory) is str:
		path = directory
		name = directory
		nyheter = False
		dokument = False 
	else:
		path = directory.path
		name = directory.name
		nyheter = path.endswith('\\Nyheter') 
		dokument = path.endswith('\\Dokument')

	if name.endswith('.css'): return

	name = name.replace("_", " ")

	hash_html = []
	hash_link = []
	hash_directory = []
	hash_others = []

	indexHtml = ""

	for f in os.scandir(path):
		if os.path.isfile(f) and f.name.endswith('.md'):
			if f.name == 'index.md':
				indexHtml = writeMD(f.path)
			else:
				html = writeMD(f.path)
				if html:
					filename = f.path.replace('.md', '.html').replace('\\', '/')
					wrapHtml('markdown ' + f.path, filename, f.name, level + 1, html)

	for f in os.scandir(path):
		if os.path.isfile(f):
			if f.name.endswith('.md'): pass
			elif f.name.endswith('.html'): hash_html.append(f)
			elif f.name.endswith('.link'): hash_link.append(f)
			elif f.name not in ['favicon.ico','style.css']:
				if not f.name.startswith(IGNORE): hash_others.append(f)
		else:
			if not f.name.startswith(IGNORE): hash_directory.append(f)

	res = [[noExt(f.name), f.name] for f in hash_html if f.name != 'index.html'] 
	res += [[noExt(f.name),getLink(f.path)] for f in hash_link] 
	res += [[noExt(f.name), f.name] for f in hash_others] 
	for f in hash_directory: 
		res += [[f.name.replace("_", " "), f.name]]
		if f.name != 'Förklaring':
			transpileDir(f, level + 1)

	res.sort()
	if nyheter or dokument: res.reverse()

	res = [f"\t<tr><td><a href='{convert(href)}'>{title.replace('_',' ')}</a></td></tr>" for [title,href] in res] # if title != "Nyheter"]
	res = "<table>\n" + "\n".join(res) + "\n</table>"
	if nyheter: news = res

	if level == 0:
		res += f'<br><div style="font-size:16px">Uppdaterad {yymmddhhmmss()}</div>'

	indexHtml = res if indexHtml == "" else indexHtml.replace("AUTO",res)
	if indexHtml: wrapHtml('directory ' + name, path + '/index.html', name, level+1, indexHtml)

def writeMD(long):
	with open(long,encoding='utf8') as f:
		md = f.read()
		html = mdit.render(md)
		html = patch(html)
	return html

start = time.time_ns()
transpileDir(ROOT)
print(sys.version,round((time.time_ns() - start)/10**6),'ms')
